{
  "swagger": "2.0",
  "info": {
    "title": "User Service",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "UserService"
    },
    {
      "name": "PermissionService"
    },
    {
      "name": "RoleService"
    },
    {
      "name": "Account"
    },
    {
      "name": "Auth"
    },
    {
      "name": "AuthWeb"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/account/address/{address.id}": {
      "put": {
        "operationId": "Account_UpdateAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAddressesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "address.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAddressesRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/v1/account/addresses": {
      "get": {
        "operationId": "Account_GetAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAddressesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "delete": {
        "operationId": "Account_DeleteAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAddressesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "post": {
        "operationId": "Account_CreateAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAddressReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAddressesRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/v1/account/profile": {
      "get": {
        "operationId": "Account_GetProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "put": {
        "summary": "UpdateProfile\r\nAvatar: POST form file /v1/account/avatar",
        "operationId": "Account_UpdateProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateProfileRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/v1/account/settings": {
      "get": {
        "operationId": "Account_GetSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.key.$eq",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.key.$neq",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.key.$contains",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.key.$starts_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.key.$nstarts_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.key.$ends_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.key.$nends_with",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.key.$in",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.key.$nin",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.key.$null",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.key.$nnull",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.key.$empty",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.key.$nempty",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filter.key.$like",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "put": {
        "operationId": "Account_UpdateSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSettingsRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/v1/auth/action/forget": {
      "post": {
        "operationId": "Auth_SendForgetPasswordToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ForgetPasswordTokenReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ForgetPasswordTokenRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/action/passwordless": {
      "post": {
        "operationId": "Auth_SendPasswordlessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PasswordlessTokenAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordlessTokenAuthRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/csrf": {
      "get": {
        "operationId": "Auth_GetCsrfToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCsrfTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/login": {
      "get": {
        "operationId": "Auth_GetLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "redirect",
            "description": "redirect url.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "loginChallenge",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "operationId": "Auth_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginAuthRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/login/passwordless": {
      "post": {
        "operationId": "Auth_LoginPasswordless",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginPasswordlessReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginPasswordlessRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/password/change": {
      "post": {
        "operationId": "Auth_ChangePasswordByPre",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordByPreReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordByPreRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/password/forget": {
      "post": {
        "summary": "ForgetPassword\r\nverify forget password token",
        "operationId": "Auth_ForgetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ForgetPasswordReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ForgetPasswordRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/password/forget/change": {
      "post": {
        "operationId": "Auth_ChangePasswordByForget",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordByForgetReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordByForgetRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/password/validate": {
      "post": {
        "summary": "ValidatePassword\r\nserver validation for password strength",
        "operationId": "Auth_ValidatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidatePasswordReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidatePasswordRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "operationId": "Auth_Refresh",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenAuthRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "operationId": "Auth_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterAuthRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/token": {
      "post": {
        "operationId": "Auth_Token",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TokenReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TokenRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/web/consent": {
      "get": {
        "operationId": "AuthWeb_GetConsent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetConsentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "consentChallenge",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      },
      "post": {
        "operationId": "AuthWeb_GrantConsent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GrantConsentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GrantConsentRequest"
            }
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      }
    },
    "/v1/auth/web/login": {
      "get": {
        "operationId": "AuthWeb_GetWebLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "redirect",
            "description": "redirect url.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "loginChallenge",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      },
      "post": {
        "operationId": "AuthWeb_WebLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1WebLoginAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1WebLoginAuthRequest"
            }
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      }
    },
    "/v1/auth/web/logout": {
      "get": {
        "operationId": "AuthWeb_GetWebLogout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "logoutChallenge",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      },
      "post": {
        "operationId": "AuthWeb_WebLogout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LogoutRequest"
            }
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      }
    },
    "/v1/permission/check": {
      "post": {
        "operationId": "PermissionService_CheckCurrent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckPermissionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/current": {
      "get": {
        "summary": "Get current permission",
        "operationId": "PermissionService_GetCurrent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCurrentPermissionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/subject": {
      "get": {
        "summary": "management list",
        "operationId": "PermissionService_ListSubjectPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSubjectPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subjects",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "PermissionService"
        ]
      },
      "post": {
        "summary": "management add",
        "operationId": "PermissionService_AddSubjectPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddSubjectPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddSubjectPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      },
      "put": {
        "summary": "management update",
        "operationId": "PermissionService_UpdateSubjectPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSubjectPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSubjectPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/subject/list": {
      "post": {
        "summary": "management list",
        "operationId": "PermissionService_ListSubjectPermission2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSubjectPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSubjectPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/subject/rm": {
      "post": {
        "summary": "management remove",
        "operationId": "PermissionService_RemoveSubjectPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveSubjectPermissionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveSubjectPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/role": {
      "post": {
        "summary": "authz: user.role,*,create",
        "operationId": "RoleService_CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRoleRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/role/list": {
      "post": {
        "summary": "authz: user.role,*,list",
        "operationId": "RoleService_ListRoles2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRolesRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/role/{id}": {
      "get": {
        "summary": "authz: user.role,id,get",
        "operationId": "RoleService_GetRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id or name should be provided",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "id or name should be provided.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      },
      "delete": {
        "summary": "authz: user.role,id,delete",
        "operationId": "RoleService_DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/role/{id}/permission": {
      "get": {
        "operationId": "RoleService_GetRolePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRolePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      },
      "put": {
        "operationId": "RoleService_UpdateRolePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateRolePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "acl": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1UpdateRolePermissionAcl"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/role/{role.id}": {
      "put": {
        "summary": "authz: user.role,id,update",
        "operationId": "RoleService_UpdateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "role.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRoleRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      },
      "patch": {
        "summary": "authz: user.role,id,update",
        "operationId": "RoleService_UpdateRole2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "role.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRoleRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/roles": {
      "get": {
        "summary": "authz: user.role,*,list",
        "operationId": "RoleService_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.idIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.nameIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/user": {
      "post": {
        "summary": "CreateUser\r\nauthz: user.user,*,create",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/invite": {
      "post": {
        "summary": "InviteUser\r\nauthz: user.user,*,create",
        "operationId": "UserService_InviteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1InviteUserReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1InviteUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/list": {
      "post": {
        "summary": "ListUsers\r\nauthz: user.user,*,list",
        "operationId": "UserService_ListUsers2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListUsersRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/{id}": {
      "get": {
        "summary": "GetUser\r\nauthz: user.user,id,get",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "DeleteUser\r\nauthz: user.user,id,delete",
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "description": "default false. Just remove user out of tenant. set to true to remove user from system.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/{id}/roles": {
      "get": {
        "summary": "GetUserRoles\r\nauthz: user.user,id,get",
        "operationId": "UserService_GetUserRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserRoleReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/{user.id}": {
      "put": {
        "summary": "UpdateUser\r\nauthz: user.user,id,update",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "patch": {
        "summary": "UpdateUser\r\nauthz: user.user,id,update",
        "operationId": "UserService_UpdateUser2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "ListUsers\r\nauthz: user.user,*,list",
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.idIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.genderIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.birthdayGte",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.birthdayLte",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.roles.idIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.roles.nameIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "blobBlobFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mime": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "dataAddress": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "title": "Country or region"
        },
        "state": {
          "type": "string",
          "title": "State or province"
        },
        "city": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        }
      }
    },
    "dataDynamicValue": {
      "type": "object",
      "properties": {
        "intValue": {
          "type": "integer",
          "format": "int32"
        },
        "longValue": {
          "type": "string",
          "format": "int64"
        },
        "floatValue": {
          "type": "number",
          "format": "float"
        },
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "stringValue": {
          "type": "string"
        },
        "boolValue": {
          "type": "boolean"
        },
        "nullValue": {
          "type": "string"
        },
        "jsonValue": {
          "type": "object"
        }
      }
    },
    "operationStringFilterOperation": {
      "type": "object",
      "properties": {
        "$eq": {
          "type": "string"
        },
        "$neq": {
          "type": "string"
        },
        "$contains": {
          "type": "string"
        },
        "$starts_with": {
          "type": "string"
        },
        "$nstarts_with": {
          "type": "string"
        },
        "$ends_with": {
          "type": "string"
        },
        "$nends_with": {
          "type": "string"
        },
        "$in": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "$nin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "$null": {
          "type": "boolean"
        },
        "$nnull": {
          "type": "boolean"
        },
        "$empty": {
          "type": "boolean"
        },
        "$nempty": {
          "type": "boolean"
        },
        "$like": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddSubjectPermissionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        },
        "subject": {
          "type": "string",
          "required": [
            "subject"
          ]
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "resource",
        "action",
        "subject"
      ]
    },
    "v1AddSubjectPermissionResponse": {
      "type": "object"
    },
    "v1ChangePasswordByForgetReply": {
      "type": "object"
    },
    "v1ChangePasswordByForgetRequest": {
      "type": "object",
      "properties": {
        "changePasswordToken": {
          "type": "string",
          "required": [
            "change_password_token"
          ]
        },
        "newPassword": {
          "type": "string",
          "required": [
            "new_password"
          ]
        },
        "confirmNewPassword": {
          "type": "string",
          "required": [
            "confirm_new_password"
          ]
        }
      },
      "required": [
        "changePasswordToken",
        "newPassword",
        "confirmNewPassword"
      ]
    },
    "v1ChangePasswordByPreReply": {
      "type": "object"
    },
    "v1ChangePasswordByPreRequest": {
      "type": "object",
      "properties": {
        "prePassword": {
          "type": "string",
          "required": [
            "pre_password"
          ]
        },
        "newPassword": {
          "type": "string",
          "required": [
            "new_password"
          ]
        },
        "confirmNewPassword": {
          "type": "string",
          "required": [
            "confirm_new_password"
          ]
        }
      },
      "required": [
        "prePassword",
        "newPassword",
        "confirmNewPassword"
      ]
    },
    "v1CheckPermissionReply": {
      "type": "object",
      "properties": {
        "effect": {
          "$ref": "#/definitions/v1Effect"
        }
      }
    },
    "v1CheckPermissionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        }
      },
      "required": [
        "namespace",
        "resource",
        "action"
      ]
    },
    "v1CheckSubjectsPermissionReply": {
      "type": "object",
      "properties": {
        "effectList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Effect"
          }
        }
      }
    },
    "v1CheckUserTenantReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "title": "can user access this tenant"
        }
      }
    },
    "v1CreateAddressReply": {
      "type": "object"
    },
    "v1CreateAddressesRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "usage": {
          "type": "string"
        },
        "prefer": {
          "type": "boolean"
        },
        "address": {
          "$ref": "#/definitions/dataAddress"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1CreateRoleRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "required": [
            "username"
          ]
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "avatar": {
          "type": "string"
        },
        "rolesId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "username"
      ]
    },
    "v1DeleteAddressesReply": {
      "type": "object"
    },
    "v1DeleteRoleResponse": {
      "type": "object"
    },
    "v1DeleteUserResponse": {
      "type": "object"
    },
    "v1Effect": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GRANT",
        "FORBIDDEN"
      ],
      "default": "UNKNOWN"
    },
    "v1ForgetPasswordReply": {
      "type": "object",
      "properties": {
        "changePasswordToken": {
          "type": "string",
          "title": "next step for change password"
        }
      }
    },
    "v1ForgetPasswordRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "v1ForgetPasswordTokenReply": {
      "type": "object",
      "properties": {
        "expire": {
          "type": "string",
          "title": "expire time"
        }
      }
    },
    "v1ForgetPasswordTokenRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1Gender": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "MALE",
        "FEMALE",
        "OTHER"
      ],
      "default": "UNKNOWN"
    },
    "v1GetAddressesReply": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserAddress"
          }
        }
      }
    },
    "v1GetConsentResponse": {
      "type": "object",
      "properties": {
        "challenge": {
          "type": "string",
          "required": [
            "challenge"
          ]
        },
        "requestedScope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string"
        },
        "client": {
          "$ref": "#/definitions/v1OAuthClient"
        },
        "redirect": {
          "type": "string"
        }
      },
      "required": [
        "challenge"
      ]
    },
    "v1GetCsrfTokenResponse": {
      "type": "object",
      "properties": {
        "csrfToken": {
          "type": "string"
        }
      }
    },
    "v1GetCurrentPermissionReply": {
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      }
    },
    "v1GetLoginResponse": {
      "type": "object",
      "properties": {
        "redirect": {
          "type": "string",
          "title": "normalized redirect url"
        },
        "oauth": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OAuthProvider"
          }
        },
        "hint": {
          "type": "string"
        },
        "challenge": {
          "type": "string"
        }
      }
    },
    "v1GetLogoutResponse": {
      "type": "object",
      "properties": {
        "challenge": {
          "type": "string"
        }
      }
    },
    "v1GetProfileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        },
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserTenant"
          },
          "title": "user available tenants"
        },
        "avatar": {
          "$ref": "#/definitions/blobBlobFile"
        },
        "currentTenant": {
          "$ref": "#/definitions/v1UserTenant"
        }
      }
    },
    "v1GetRolePermissionResponse": {
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        },
        "defGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PermissionDefGroup"
          }
        }
      }
    },
    "v1GetSettingsResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Settings"
          }
        }
      }
    },
    "v1GetUserRoleReply": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserRole"
          }
        }
      }
    },
    "v1GrantConsentRequest": {
      "type": "object",
      "properties": {
        "challenge": {
          "type": "string"
        },
        "grantScope": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "user granted scope"
        },
        "reject": {
          "type": "boolean"
        }
      }
    },
    "v1GrantConsentResponse": {
      "type": "object",
      "properties": {
        "redirect": {
          "type": "string"
        }
      }
    },
    "v1InviteUserReply": {
      "type": "object",
      "properties": {
        "requiredConfirm": {
          "type": "boolean"
        }
      }
    },
    "v1InviteUserRequest": {
      "type": "object",
      "properties": {
        "identify": {
          "type": "string",
          "title": "username email or phone",
          "required": [
            "identify"
          ]
        }
      },
      "required": [
        "identify"
      ]
    },
    "v1ListRolesRequest": {
      "type": "object",
      "properties": {
        "pageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "search": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/v1RoleFilter"
        }
      }
    },
    "v1ListRolesResponse": {
      "type": "object",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32"
        },
        "filterSize": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        }
      }
    },
    "v1ListSubjectPermissionRequest": {
      "type": "object",
      "properties": {
        "subjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListSubjectPermissionResponse": {
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        },
        "defGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PermissionDefGroup"
          }
        }
      }
    },
    "v1ListUsersRequest": {
      "type": "object",
      "properties": {
        "pageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "search": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/v1UserFilter"
        }
      }
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32"
        },
        "filterSize": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1LoginAuthReply": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string",
          "title": "Bearer"
        },
        "expires": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds\r\nDeprecated, use expires_in instead"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token to keep login state"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        },
        "redirect": {
          "type": "string"
        }
      }
    },
    "v1LoginAuthRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "required": [
            "username"
          ]
        },
        "password": {
          "type": "string",
          "required": [
            "password"
          ]
        },
        "remember": {
          "type": "boolean"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "v1LoginPasswordlessReply": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string",
          "title": "Bearer"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token to keep login state"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        }
      }
    },
    "v1LoginPasswordlessRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string",
          "required": [
            "token"
          ]
        }
      },
      "required": [
        "token"
      ]
    },
    "v1LogoutRequest": {
      "type": "object",
      "properties": {
        "challenge": {
          "type": "string"
        }
      }
    },
    "v1LogoutResponse": {
      "type": "object",
      "properties": {
        "redirect": {
          "type": "string"
        }
      }
    },
    "v1OAuthClient": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1OAuthProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1PasswordlessTokenAuthReply": {
      "type": "object",
      "properties": {
        "expire": {
          "type": "string",
          "title": "expire time"
        }
      }
    },
    "v1PasswordlessTokenAuthRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1Permission": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "v1PermissionDef": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "side": {
          "$ref": "#/definitions/v1PermissionSide"
        },
        "extra": {
          "type": "object"
        },
        "namespace": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "granted": {
          "type": "boolean"
        }
      }
    },
    "v1PermissionDefGroup": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "side": {
          "$ref": "#/definitions/v1PermissionSide"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "def": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PermissionDef"
          }
        },
        "extra": {
          "type": "object"
        }
      }
    },
    "v1PermissionRequirement": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        }
      },
      "required": [
        "namespace",
        "resource",
        "action"
      ]
    },
    "v1PermissionSide": {
      "type": "string",
      "enum": [
        "BOTH",
        "HOST_ONLY",
        "TENANT_ONLY"
      ],
      "default": "BOTH"
    },
    "v1RefreshRememberTokenReply": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "newRmToken": {
          "type": "string"
        }
      }
    },
    "v1RefreshTokenAuthReply": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string",
          "title": "Bearer"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token to keep login state"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        }
      }
    },
    "v1RefreshTokenAuthRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "required": [
            "refresh_token"
          ]
        }
      },
      "required": [
        "refreshToken"
      ]
    },
    "v1RegisterAuthReply": {
      "type": "object"
    },
    "v1RegisterAuthRequest": {
      "type": "object"
    },
    "v1RemoveSubjectPermissionReply": {
      "type": "object"
    },
    "v1RemoveSubjectPermissionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        },
        "subject": {
          "type": "string",
          "required": [
            "subject"
          ]
        },
        "effects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Effect"
          }
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "resource",
        "action",
        "subject"
      ]
    },
    "v1Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isPreserved": {
          "type": "boolean"
        }
      }
    },
    "v1RoleFilter": {
      "type": "object",
      "properties": {
        "idIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nameIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Settings": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/dataDynamicValue"
        }
      }
    },
    "v1SettingsFilter": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/operationStringFilterOperation"
        }
      }
    },
    "v1TenantInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "logo": {
          "$ref": "#/definitions/blobBlobFile"
        }
      },
      "title": "TenantInfo public tenant information"
    },
    "v1TokenReply": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string",
          "title": "Bearer"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token to keep login state"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        }
      }
    },
    "v1TokenRequest": {
      "type": "object",
      "properties": {
        "grantType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v1UpdateAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": [
            "id"
          ]
        },
        "phone": {
          "type": "string"
        },
        "usage": {
          "type": "string"
        },
        "prefer": {
          "type": "boolean"
        },
        "address": {
          "$ref": "#/definitions/dataAddress"
        },
        "metadata": {
          "type": "object"
        }
      },
      "required": [
        "id"
      ]
    },
    "v1UpdateAddressesReply": {
      "type": "object"
    },
    "v1UpdateAddressesRequest": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/v1UpdateAddress"
        }
      }
    },
    "v1UpdateProfileRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        }
      }
    },
    "v1UpdateProfileResponse": {
      "type": "object"
    },
    "v1UpdateRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": [
            "id"
          ]
        },
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "v1UpdateRolePermissionAcl": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        }
      }
    },
    "v1UpdateRolePermissionResponse": {
      "type": "object"
    },
    "v1UpdateRoleRequest": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1UpdateRole"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateSettings": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/dataDynamicValue"
        },
        "reset": {
          "type": "boolean"
        }
      }
    },
    "v1UpdateSettingsRequest": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UpdateSettings"
          }
        }
      }
    },
    "v1UpdateSettingsResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Settings"
          }
        }
      }
    },
    "v1UpdateSubjectPermissionAcl": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "resource",
        "action"
      ]
    },
    "v1UpdateSubjectPermissionRequest": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "required": [
            "subject"
          ]
        },
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UpdateSubjectPermissionAcl"
          }
        }
      },
      "required": [
        "subject"
      ]
    },
    "v1UpdateSubjectPermissionResponse": {
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      }
    },
    "v1UpdateUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": [
            "id"
          ]
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "password": {
          "type": "string",
          "title": "reset password"
        },
        "confirmPassword": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "rolesId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "v1UpdateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1UpdateUser"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        },
        "avatar": {
          "$ref": "#/definitions/blobBlobFile"
        }
      }
    },
    "v1UserAddress": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "usage": {
          "type": "string"
        },
        "prefer": {
          "type": "boolean"
        },
        "address": {
          "$ref": "#/definitions/dataAddress"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1UserFilter": {
      "type": "object",
      "properties": {
        "idIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "genderIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "birthdayGte": {
          "type": "string",
          "format": "date-time"
        },
        "birthdayLte": {
          "type": "string",
          "format": "date-time"
        },
        "roles": {
          "$ref": "#/definitions/v1RoleFilter"
        },
        "and": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserFilter"
          }
        },
        "or": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserFilter"
          }
        }
      }
    },
    "v1UserRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1UserTenant": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "tenant": {
          "$ref": "#/definitions/v1TenantInfo"
        },
        "isHost": {
          "type": "boolean"
        }
      }
    },
    "v1ValidatePasswordReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        }
      }
    },
    "v1ValidatePasswordRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "v1WebLoginAuthReply": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string",
          "title": "Bearer"
        },
        "expires": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token to keep login state"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        },
        "redirect": {
          "type": "string"
        }
      }
    },
    "v1WebLoginAuthRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "required": [
            "username"
          ]
        },
        "password": {
          "type": "string",
          "required": [
            "password"
          ]
        },
        "remember": {
          "type": "boolean"
        },
        "challenge": {
          "type": "string"
        },
        "reject": {
          "type": "boolean"
        }
      },
      "required": [
        "username",
        "password"
      ]
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
