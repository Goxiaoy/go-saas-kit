{
  "swagger": "2.0",
  "info": {
    "title": "Saas Service",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "TenantService"
    },
    {
      "name": "PermissionService"
    },
    {
      "name": "MenuService"
    },
    {
      "name": "RoleService"
    },
    {
      "name": "UserService"
    },
    {
      "name": "Account"
    },
    {
      "name": "Auth"
    },
    {
      "name": "AuthWeb"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/account/addresses": {
      "get": {
        "operationId": "Account_GetAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAddressesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "put": {
        "operationId": "Account_UpdateAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAddressesReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateAddressesRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/v1/account/profile": {
      "get": {
        "operationId": "Account_GetProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "put": {
        "operationId": "Account_UpdateProfile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateProfileRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/v1/account/settings": {
      "get": {
        "operationId": "Account_GetSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "put": {
        "operationId": "Account_UpdateSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSettingsRequest"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/v1/auth/action/forget": {
      "post": {
        "operationId": "Auth_SendForgetPasswordToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ForgetPasswordTokenReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ForgetPasswordTokenRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/action/passwordless": {
      "post": {
        "operationId": "Auth_SendPasswordlessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PasswordlessTokenAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordlessTokenAuthRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/csrf": {
      "get": {
        "operationId": "Auth_GetCsrfToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCsrfTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/login": {
      "get": {
        "operationId": "Auth_GetLoginForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLoginFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "redirect",
            "description": "redirect url.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "operationId": "Auth_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginAuthRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/login/passwordless": {
      "post": {
        "operationId": "Auth_LoginPasswordless",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginPasswordlessReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginPasswordlessRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/password/forget": {
      "post": {
        "operationId": "Auth_ForgetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ForgetPasswordReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ForgetPasswordRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/password/validate": {
      "post": {
        "operationId": "Auth_ValidatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidatePasswordReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidatePasswordRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "operationId": "Auth_Refresh",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenAuthRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "operationId": "Auth_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterAuthRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/token": {
      "post": {
        "operationId": "Auth_Token",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TokenReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TokenRequest"
            }
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/web/login": {
      "get": {
        "operationId": "AuthWeb_GetWebLoginForm",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLoginFormResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "redirect",
            "description": "redirect url.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      },
      "post": {
        "operationId": "AuthWeb_WebLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginAuthReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginAuthRequest"
            }
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      }
    },
    "/v1/auth/web/logout": {
      "post": {
        "operationId": "AuthWeb_WebLogout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LogoutRequest"
            }
          }
        ],
        "tags": [
          "AuthWeb"
        ]
      }
    },
    "/v1/permission/check": {
      "post": {
        "operationId": "PermissionService_CheckCurrent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckPermissionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/check-subjects": {
      "post": {
        "operationId": "PermissionService_CheckForSubjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckSubjectsPermissionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckSubjectsPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/current": {
      "get": {
        "summary": "Get current permission",
        "operationId": "PermissionService_GetCurrent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetCurrentPermissionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/subject": {
      "get": {
        "summary": "management list",
        "operationId": "PermissionService_ListSubjectPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSubjectPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subjects",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "PermissionService"
        ]
      },
      "post": {
        "summary": "management add",
        "operationId": "PermissionService_AddSubjectPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddSubjectPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddSubjectPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      },
      "put": {
        "summary": "management update",
        "operationId": "PermissionService_UpdateSubjectPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSubjectPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateSubjectPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/subject/list": {
      "post": {
        "summary": "management list",
        "operationId": "PermissionService_ListSubjectPermission2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSubjectPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListSubjectPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/permission/subject/rm": {
      "post": {
        "summary": "management remove",
        "operationId": "PermissionService_RemoveSubjectPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveSubjectPermissionReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveSubjectPermissionRequest"
            }
          }
        ],
        "tags": [
          "PermissionService"
        ]
      }
    },
    "/v1/role": {
      "post": {
        "summary": "authz: user.role,*,create",
        "operationId": "RoleService_CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRoleRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/role/list": {
      "post": {
        "summary": "authz: user.role,*,list",
        "operationId": "RoleService_ListRoles2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListRolesRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/role/{id}": {
      "get": {
        "summary": "authz: user.role,id,get",
        "operationId": "RoleService_GetRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id or name should be provided",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "description": "id or name should be provided.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      },
      "delete": {
        "summary": "authz: user.role,id,delete",
        "operationId": "RoleService_DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/role/{id}/permission": {
      "get": {
        "operationId": "RoleService_GetRolePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRolePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      },
      "put": {
        "operationId": "RoleService_UpdateRolePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateRolePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "alc": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1UpdateRolePermissionAcl"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      },
      "patch": {
        "operationId": "RoleService_PatchRolePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PatchRolePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addAcl": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1UpdateRolePermissionAcl"
                  }
                },
                "removeAcl": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1RemoveRRolePermissionAcl"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/role/{role.id}": {
      "put": {
        "summary": "authz: user.role,id,update",
        "operationId": "RoleService_UpdateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "role.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRoleRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      },
      "patch": {
        "summary": "authz: user.role,id,update",
        "operationId": "RoleService_UpdateRole2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "role.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRoleRequest"
            }
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/roles": {
      "get": {
        "summary": "authz: user.role,*,list",
        "operationId": "RoleService_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.idIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.nameIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/saas/tenant": {
      "post": {
        "summary": "authz: saas.tenant,*,create",
        "operationId": "TenantService_CreateTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Tenant"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTenantRequest"
            }
          }
        ],
        "tags": [
          "TenantService"
        ]
      }
    },
    "/v1/saas/tenant/list": {
      "post": {
        "summary": "authz: saas.tenant,*,list",
        "operationId": "TenantService_ListTenant2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTenantReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListTenantRequest"
            }
          }
        ],
        "tags": [
          "TenantService"
        ]
      }
    },
    "/v1/saas/tenant/{idOrName}": {
      "get": {
        "summary": "authz: saas.tenant,{id},get",
        "operationId": "TenantService_GetTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Tenant"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "idOrName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantService"
        ]
      }
    },
    "/v1/saas/tenant/{id}": {
      "delete": {
        "summary": "authz: saas.tenant,{id},delete",
        "operationId": "TenantService_DeleteTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteTenantReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TenantService"
        ]
      }
    },
    "/v1/saas/tenant/{tenant.id}": {
      "put": {
        "summary": "authz: saas.tenant,{id},update",
        "operationId": "TenantService_UpdateTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Tenant"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateTenantRequest"
            }
          }
        ],
        "tags": [
          "TenantService"
        ]
      },
      "patch": {
        "summary": "authz: saas.tenant,{id},update",
        "operationId": "TenantService_UpdateTenant2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Tenant"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tenant.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateTenantRequest"
            }
          }
        ],
        "tags": [
          "TenantService"
        ]
      }
    },
    "/v1/saas/tenants": {
      "get": {
        "summary": "authz: saas.tenant,*,list",
        "operationId": "TenantService_ListTenant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListTenantReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.idIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.nameIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.nameLike",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.regionIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "TenantService"
        ]
      }
    },
    "/v1/sys/menu": {
      "post": {
        "operationId": "MenuService_CreateMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Menu"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateMenuRequest"
            }
          }
        ],
        "tags": [
          "MenuService"
        ]
      }
    },
    "/v1/sys/menu/list": {
      "post": {
        "operationId": "MenuService_ListMenu2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMenuReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListMenuRequest"
            }
          }
        ],
        "tags": [
          "MenuService"
        ]
      }
    },
    "/v1/sys/menu/{id}": {
      "get": {
        "operationId": "MenuService_GetMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Menu"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MenuService"
        ]
      },
      "delete": {
        "operationId": "MenuService_DeleteMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteMenuReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MenuService"
        ]
      }
    },
    "/v1/sys/menu/{menu.id}": {
      "put": {
        "operationId": "MenuService_UpdateMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Menu"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menu.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMenuRequest"
            }
          }
        ],
        "tags": [
          "MenuService"
        ]
      },
      "patch": {
        "operationId": "MenuService_UpdateMenu2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Menu"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menu.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMenuRequest"
            }
          }
        ],
        "tags": [
          "MenuService"
        ]
      }
    },
    "/v1/sys/menus": {
      "get": {
        "operationId": "MenuService_ListMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListMenuReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.idIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.nameIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.parentIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "MenuService"
        ]
      }
    },
    "/v1/sys/menus/available": {
      "get": {
        "operationId": "MenuService_GetAvailableMenus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAvailableMenusReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MenuService"
        ]
      }
    },
    "/v1/user": {
      "post": {
        "summary": "authz: user.user,*,create",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/list": {
      "post": {
        "summary": "authz: user.user,*,list",
        "operationId": "UserService_ListUsers2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListUsersRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/{id}": {
      "get": {
        "summary": "authz: user.user,id,get",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "authz: user.user,id,delete",
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/{id}/roles": {
      "get": {
        "summary": "authz: user.user,id,get",
        "operationId": "UserService_GetUserRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserRoleReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/user/{user.id}": {
      "put": {
        "summary": "authz: user.user,id,update",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "patch": {
        "summary": "authz: user.user,id,update",
        "operationId": "UserService_UpdateUser2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "authz: user.user,*,list",
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageOffset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter.idIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.genderIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.birthdayGte",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.birthdayLte",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.roles.idIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filter.roles.nameIn",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "blobBlobFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mime": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "url": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "v1AddSubjectPermissionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        },
        "subject": {
          "type": "string",
          "required": [
            "subject"
          ]
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "resource",
        "action",
        "subject"
      ]
    },
    "v1AddSubjectPermissionResponse": {
      "type": "object"
    },
    "v1CheckPermissionReply": {
      "type": "object",
      "properties": {
        "effect": {
          "$ref": "#/definitions/v1Effect"
        }
      }
    },
    "v1CheckPermissionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        }
      },
      "required": [
        "namespace",
        "resource",
        "action"
      ]
    },
    "v1CheckSubjectsPermissionReply": {
      "type": "object",
      "properties": {
        "effect": {
          "$ref": "#/definitions/v1Effect"
        }
      }
    },
    "v1CheckSubjectsPermissionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        },
        "subjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "resource",
        "action"
      ]
    },
    "v1CreateMenuRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        },
        "desc": {
          "type": "string"
        },
        "component": {
          "type": "string"
        },
        "requirement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PermissionRequirement"
          }
        },
        "parent": {
          "type": "string",
          "title": "parent menu"
        },
        "props": {
          "type": "object"
        },
        "fullPath": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "ignoreAuth": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "iframe": {
          "type": "string"
        },
        "microApp": {
          "type": "string"
        },
        "meta": {
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "redirect": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "v1CreateRoleRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "v1CreateTenantRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        },
        "displayName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        }
      }
    },
    "v1DeleteMenuReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1DeleteRoleResponse": {
      "type": "object"
    },
    "v1DeleteTenantReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1DeleteUserResponse": {
      "type": "object"
    },
    "v1Effect": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GRANT",
        "FORBIDDEN"
      ],
      "default": "UNKNOWN"
    },
    "v1ForgetPasswordReply": {
      "type": "object"
    },
    "v1ForgetPasswordRequest": {
      "type": "object"
    },
    "v1ForgetPasswordTokenReply": {
      "type": "object"
    },
    "v1ForgetPasswordTokenRequest": {
      "type": "object",
      "properties": {
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "v1Gender": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "MALE",
        "FEMALE",
        "OTHER"
      ],
      "default": "UNKNOWN"
    },
    "v1GetAddressesReply": {
      "type": "object"
    },
    "v1GetAvailableMenusReply": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Menu"
          }
        }
      }
    },
    "v1GetCsrfTokenResponse": {
      "type": "object",
      "properties": {
        "csrfToken": {
          "type": "string"
        }
      }
    },
    "v1GetCurrentPermissionReply": {
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      }
    },
    "v1GetLoginFormResponse": {
      "type": "object",
      "properties": {
        "redirect": {
          "type": "string",
          "title": "normalized redirect url"
        },
        "oauth": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OAuthProvider"
          }
        }
      }
    },
    "v1GetProfileResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        },
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserTenant"
          },
          "title": "user available tenants"
        },
        "avatar": {
          "$ref": "#/definitions/blobBlobFile"
        },
        "currentTenant": {
          "$ref": "#/definitions/v1UserTenant"
        }
      }
    },
    "v1GetRolePermissionResponse": {
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      }
    },
    "v1GetSettingsResponse": {
      "type": "object"
    },
    "v1GetUserRoleReply": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserRole"
          }
        }
      }
    },
    "v1ListMenuReply": {
      "type": "object",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32"
        },
        "filterSize": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Menu"
          }
        }
      }
    },
    "v1ListMenuRequest": {
      "type": "object",
      "properties": {
        "pageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "search": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/v1MenuFilter"
        }
      }
    },
    "v1ListRolesRequest": {
      "type": "object",
      "properties": {
        "pageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "search": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/v1RoleFilter"
        }
      }
    },
    "v1ListRolesResponse": {
      "type": "object",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32"
        },
        "filterSize": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        }
      }
    },
    "v1ListSubjectPermissionRequest": {
      "type": "object",
      "properties": {
        "subjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ListSubjectPermissionResponse": {
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      }
    },
    "v1ListTenantReply": {
      "type": "object",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32"
        },
        "filterSize": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Tenant"
          }
        }
      }
    },
    "v1ListTenantRequest": {
      "type": "object",
      "properties": {
        "pageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "search": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/v1TenantFilter"
        }
      }
    },
    "v1ListUsersRequest": {
      "type": "object",
      "properties": {
        "pageOffset": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "search": {
          "type": "string"
        },
        "sort": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "string"
        },
        "filter": {
          "$ref": "#/definitions/v1UserFilter"
        }
      }
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "totalSize": {
          "type": "integer",
          "format": "int32"
        },
        "filterSize": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        }
      }
    },
    "v1LoginAuthReply": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string",
          "title": "Bearer"
        },
        "expires": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token to keep login state"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        }
      }
    },
    "v1LoginAuthRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "remember": {
          "type": "boolean"
        }
      }
    },
    "v1LoginPasswordlessReply": {
      "type": "object"
    },
    "v1LoginPasswordlessRequest": {
      "type": "object"
    },
    "v1LogoutRequest": {
      "type": "object"
    },
    "v1LogoutResponse": {
      "type": "object"
    },
    "v1Menu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "desc": {
          "type": "string"
        },
        "component": {
          "type": "string"
        },
        "requirement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PermissionRequirement"
          }
        },
        "parent": {
          "type": "string",
          "title": "parent menu"
        },
        "props": {
          "type": "object"
        },
        "fullPath": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "ignoreAuth": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "iframe": {
          "type": "string"
        },
        "microApp": {
          "type": "string"
        },
        "meta": {
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "redirect": {
          "type": "string"
        }
      }
    },
    "v1MenuFilter": {
      "type": "object",
      "properties": {
        "idIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nameIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1OAuthProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1PasswordlessTokenAuthReply": {
      "type": "object"
    },
    "v1PasswordlessTokenAuthRequest": {
      "type": "object"
    },
    "v1PatchRolePermissionResponse": {
      "type": "object"
    },
    "v1Permission": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "v1PermissionRequirement": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "v1RefreshTokenAuthReply": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string",
          "title": "Bearer"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token to keep login state"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        }
      }
    },
    "v1RefreshTokenAuthRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v1RegisterAuthReply": {
      "type": "object"
    },
    "v1RegisterAuthRequest": {
      "type": "object"
    },
    "v1RemoveRRolePermissionAcl": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1RemoveSubjectPermissionReply": {
      "type": "object"
    },
    "v1RemoveSubjectPermissionRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        },
        "subject": {
          "type": "string",
          "required": [
            "subject"
          ]
        },
        "effects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Effect"
          }
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "resource",
        "action",
        "subject"
      ]
    },
    "v1Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isPreserved": {
          "type": "boolean"
        }
      }
    },
    "v1RoleFilter": {
      "type": "object",
      "properties": {
        "idIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nameIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Tenant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "conn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TenantConnectionString"
          }
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TenantFeature"
          }
        },
        "logo": {
          "$ref": "#/definitions/blobBlobFile"
        }
      }
    },
    "v1TenantConnectionString": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1TenantFeature": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1TenantFilter": {
      "type": "object",
      "properties": {
        "idIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nameIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nameLike": {
          "type": "string"
        },
        "regionIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1TenantInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "logo": {
          "$ref": "#/definitions/blobBlobFile"
        }
      }
    },
    "v1TokenReply": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "tokenType": {
          "type": "string",
          "title": "Bearer"
        },
        "refreshToken": {
          "type": "string",
          "title": "Refresh token to keep login state"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int32",
          "title": "Expires time in seconds"
        }
      }
    },
    "v1TokenRequest": {
      "type": "object",
      "properties": {
        "grantType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "v1UpdateAddressesReply": {
      "type": "object"
    },
    "v1UpdateAddressesRequest": {
      "type": "object"
    },
    "v1UpdateMenu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": [
            "id"
          ]
        },
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        },
        "desc": {
          "type": "string"
        },
        "component": {
          "type": "string"
        },
        "requirement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PermissionRequirement"
          }
        },
        "parent": {
          "type": "string",
          "title": "parent menu"
        },
        "props": {
          "type": "object"
        },
        "fullPath": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "ignoreAuth": {
          "type": "boolean"
        },
        "icon": {
          "type": "string"
        },
        "iframe": {
          "type": "string"
        },
        "microApp": {
          "type": "string"
        },
        "meta": {
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "redirect": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "v1UpdateMenuRequest": {
      "type": "object",
      "properties": {
        "menu": {
          "$ref": "#/definitions/v1UpdateMenu"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateProfileRequest": {
      "type": "object"
    },
    "v1UpdateProfileResponse": {
      "type": "object"
    },
    "v1UpdateRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": [
            "id"
          ]
        },
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "v1UpdateRolePermissionAcl": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        }
      }
    },
    "v1UpdateRolePermissionResponse": {
      "type": "object"
    },
    "v1UpdateRoleRequest": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1UpdateRole"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateSettingsRequest": {
      "type": "object"
    },
    "v1UpdateSettingsResponse": {
      "type": "object"
    },
    "v1UpdateSubjectPermissionAcl": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "required": [
            "namespace"
          ]
        },
        "resource": {
          "type": "string",
          "required": [
            "resource"
          ]
        },
        "action": {
          "type": "string",
          "required": [
            "action"
          ]
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        },
        "tenantId": {
          "type": "string"
        }
      },
      "required": [
        "namespace",
        "resource",
        "action"
      ]
    },
    "v1UpdateSubjectPermissionRequest": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "required": [
            "subject"
          ]
        },
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UpdateSubjectPermissionAcl"
          }
        }
      },
      "required": [
        "subject"
      ]
    },
    "v1UpdateSubjectPermissionResponse": {
      "type": "object",
      "properties": {
        "acl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      }
    },
    "v1UpdateTenant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": [
            "id"
          ]
        },
        "name": {
          "type": "string",
          "required": [
            "name"
          ]
        },
        "displayName": {
          "type": "string"
        },
        "conn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TenantConnectionString"
          }
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1TenantFeature"
          }
        },
        "logo": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "v1UpdateTenantRequest": {
      "type": "object",
      "properties": {
        "tenant": {
          "$ref": "#/definitions/v1UpdateTenant"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1UpdateUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": [
            "id"
          ]
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "password": {
          "type": "string",
          "title": "reset password"
        },
        "confirmPassword": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "v1UpdateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1UpdateUser"
        },
        "updateMask": {
          "type": "string"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "birthday": {
          "type": "string",
          "format": "date-time"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        },
        "avatar": {
          "$ref": "#/definitions/blobBlobFile"
        }
      }
    },
    "v1UserFilter": {
      "type": "object",
      "properties": {
        "idIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "genderIn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "birthdayGte": {
          "type": "string",
          "format": "date-time"
        },
        "birthdayLte": {
          "type": "string",
          "format": "date-time"
        },
        "roles": {
          "$ref": "#/definitions/v1RoleFilter"
        },
        "and": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserFilter"
          }
        },
        "or": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1UserFilter"
          }
        }
      }
    },
    "v1UserRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1UserTenant": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "tenant": {
          "$ref": "#/definitions/v1TenantInfo"
        },
        "isHost": {
          "type": "boolean"
        }
      }
    },
    "v1ValidatePasswordReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        }
      }
    },
    "v1ValidatePasswordRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    }
  }
}
