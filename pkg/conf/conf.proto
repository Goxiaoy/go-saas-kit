syntax = "proto3";

package conf;

import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";
import "blob/blob.proto";

option go_package = "github.com/goxiaoy/go-saas-kit/pkg/conf;conf";

message Server {
  message HTTP {

    message Cors{
      repeated string allowed_origins=1;
      repeated string allowed_methods=2;
      repeated string allowed_headers=3;
    }

    message Csrf{
      Cookie cookie=10;
      optional google.protobuf.StringValue request_header=17;
      optional google.protobuf.StringValue field_name =18;
      repeated string trusted_origins=20;
    }

    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
    Cors cors=4;
    Csrf csrf=5;

  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Service{
  string grpc_endpoint=1;
  string http_endpoint=2;
}

message Client{
  string client_id=1;
  // server clients use secret
  string client_secret=2;
  google.protobuf.Duration timeout = 3;
}

message Services{
  map<string, Service> services = 1;
  map<string,Server> servers =2;
  map<string,Client> clients =3;
}

message Database {
  string driver = 1;
  string source = 2;
  bool debug = 3;
  optional google.protobuf.StringValue table_prefix = 4;
}

message Endpoints{
  map<string, Database> databases = 1;
  map<string,Event> events=2;
  map<string,Redis> redis=3;
  Email email=4;
  Sms sms=5;
}

message Redis {
  // Url see redis.ParseURL (https://github.com/go-redis/redis/blob/27f0addeb2e6997bdd2faa1b48f6a989f83c4751/options.go#L225)
  string url = 1;
}

message Event{
  string type=1;
  string addr=2;
  string topic=3;
  string group=4;
  message Kafka{
    optional google.protobuf.StringValue version=1;
  }
  Kafka kafka=10;
}

message Security{
  message Jwt{
    google.protobuf.Duration expire_in=1;
    string secret=2;
    google.protobuf.Duration refresh_token_expire_in=3;
    string issuer=4;
  }
  message CookieKey{
    string hash_key=1;
    optional google.protobuf.StringValue block_key=2;
  }
  Jwt jwt=1;
  CookieKey security_cookie=2;

  Cookie session_cookie=6;
  Cookie remember_cookie=7;

  Oidc oidc=8;
}

enum SameSiteMode{
  SameSiteDefault =0;
  SameSiteLax=1;
  SameSiteStrict=2;
  SameSiteNone=3;
}

message Cookie{
  optional google.protobuf.StringValue name=10;

  optional google.protobuf.Int32Value max_age=11;
  optional google.protobuf.StringValue domain=12;
  optional google.protobuf.StringValue path=13;
  optional google.protobuf.BoolValue http_only =14;
  optional google.protobuf.BoolValue secure =15;
  SameSiteMode same_site=16;
}

message Oidc{
  string provider=1;
  Hydra hydra=2;
}

message Hydra{
  string admin_url=1;
  string public_url=2;
}


message Logging{
  // Zap config, see https://github.com/uber-go/zap/blob/78c80fbae8e745f49704cca337f9ad0eca1ca93f/config.go#L58
  google.protobuf.Struct zap=100;
}


message Email{
  string provider=1;
  string from = 2;
  
  message SMTP{
    string host=1;
    int32  port=2;
    string username=3;
    string password=4;
    enum Encryption{
      NONE=0;
      SSL=1;
      STARTTLS=2;
    }
    Encryption encryption=5;
    bool keep_alive=6;
    optional google.protobuf.Int32Value connect_timeout=7;
    optional google.protobuf.Int32Value send_timeout=8;
    bool tls_skip_verify=9;
  }
  SMTP smtp=100;
}

message Sms{
  string provider=1;
}

message Tracers{
  message Otel{
    string grpc=1;
  }
  Otel otel=1;
}

message AppConfig{
  google.protobuf.StringValue tenant_key=1;
  google.protobuf.StringValue domain_format=2;
}


message Data {
  conf.Endpoints endpoints = 1;
  map<string,blob.BlobConfig> blobs=2;
}