version: '3.7'
services:

  web:
    image: ${DOCKER_REGISTRY}go-saas-kit-web:${DOCKER_TAG:-latest}
    restart: always

  apisix:
    image: apache/apisix:dev
    restart: always
    volumes:
      - ./quickstart/configs/apisix/apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
      - ./quickstart/configs/apisix/apisix_conf/apisix.yaml:/usr/local/apisix/conf/apisix.yaml:ro
      - apisix_runner:/tmp/runner #config for plugin
    #    depends_on:
    #      - etcd
    ports:
      - "8600:9080"
      - "9091:9091"
      - "9443:9443"
      - "9092"

  apisix-plugin:
    image: ${DOCKER_REGISTRY}go-saas-kit-apisix-plugin:${DOCKER_TAG:-latest}
    restart: always
    volumes:
      - apisix_runner:/tmp/runner
      - ./quickstart/configs:/data/conf
    environment:
      - APISIX_LISTEN_ADDRESS=unix:/tmp/runner/runner.sock
    #    depends_on:
    #      - etcd


  api_docs:
    image: ${DOCKER_REGISTRY}go-saas-kit-swagger:${DOCKER_TAG:-latest}
    ports:
      - "8080"
    environment:
      - BASE_URL="/swagger"

  user:
    image: ${DOCKER_REGISTRY}go-saas-kit-user:${DOCKER_TAG:-latest}
    ports:
      - "8500"
      - "8501"
    depends_on:
      - mysqld
      - redis
    volumes:
      - ./quickstart/configs:/data/conf
      - ./quickstart/.assets:/app/.assets

  saas:
    image: ${DOCKER_REGISTRY}go-saas-kit-saas:${DOCKER_TAG:-latest}
    ports:
      - "8520"
      - "8521"
    depends_on:
      - mysqld
      - kafka
#      - user
    volumes:
      - ./quickstart/configs:/data/conf
      - ./quickstart/.assets:/app/.assets


  sys:
    image: ${DOCKER_REGISTRY}go-saas-kit-sys:${DOCKER_TAG:-latest}
    ports:
      - "8530"
      - "8531"
    depends_on:
      - mysqld
#      - saas
    volumes:
      - ./quickstart/configs:/data/conf
      - ./quickstart/.assets:/app/.assets

  mysqld:
    image: mysql:5.7
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=youShouldChangeThis
      - MYSQL_ROOT_HOST=%
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3406:3306"

  redis:
    image: redis:6.0
    restart: always
    command: redis-server --requirepass youShouldChangeThis
    ports:
      - "7379:6379"

  zoo1:
    image: wurstmeister/zookeeper
    hostname: zoo1
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_BROKER_ID: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "kit:1:1"
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zoo1
    restart: always

volumes:
  mysql_data:
  apisix_runner:
