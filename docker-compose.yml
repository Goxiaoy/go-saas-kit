version: '3.7'
services:

  web:
    image: ${DOCKER_REGISTRY}go-saas-kit-web:${DOCKER_TAG:-latest}
    restart: on-failure

  api_docs:
    image: ${DOCKER_REGISTRY}go-saas-kit-swagger:${DOCKER_TAG:-latest}
    environment:
      - BASE_URL="/swagger"
    restart: on-failure
    build:
      context: .
      dockerfile: ./openapi/Dockerfile

  apisix:
    image: ${DOCKER_REGISTRY}go-saas-kit-apisix:${DOCKER_TAG:-latest}
    ports:
      - "80:9080" #Http
      - "9091:9091" #Prometheus
      - "9443:9443" #Https
    restart: on-failure
    build:
      context: .
      dockerfile: ./gateway/apisix/Dockerfile


  mysqld:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=youShouldChangeThis
      - MYSQL_ROOT_HOST=%
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3406:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:6.0
    restart: always
    command: redis-server --requirepass youShouldChangeThis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "7379:6379"

  zoo1:
    image: wurstmeister/zookeeper
    hostname: zoo1
#    ports:
#      - "2181:2181"
    restart: always

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_BROKER_ID: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "kit:1:1"
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zoo1
    restart: always

volumes:
  mysql_data:
  apisix_runner:
