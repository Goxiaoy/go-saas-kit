syntax = "proto3";

package conf;

import "google/protobuf/duration.proto";
option go_package = "github.com/goxiaoy/go-saas-kit/pkg/conf;conf";

message Server {
  message HTTP {

    message Cors{
      repeated string allowed_origins=1;
      repeated string allowed_methods=2;
      repeated string allowed_headers=3;
    }

    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
    Cors cors=4;

  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Service{
  string grpc_endpoint=1;
  string http_endpoint=2;
}

message Client{
  string client_id=1;
  // server clients use secret
  string client_secret=2;
  google.protobuf.Duration timeout = 3;
}

message Services{
  map<string, Service> services = 1;
  map<string,Server> servers =2;
  map<string,Client> clients =3;
}

message Database {
  string driver = 1;
  string source = 2;
  bool  debug =3;
}

message Endpoints{
  map<string, Database> databases = 1;
  map<string,Event> events=2;
  map<string,Redis> redis=3;
}

message Redis {
  string network = 1;
  string addr = 2;
  google.protobuf.Duration read_timeout = 3;
  google.protobuf.Duration write_timeout = 4;
  string username = 5;
  string password = 6;
  int32  db = 7;
  int32 max_retries = 8;
  google.protobuf.Duration min_retry_backoff = 9;
  google.protobuf.Duration max_retry_backoff = 10;
  google.protobuf.Duration dial_timeout = 11;
}

message Event{
  string type=1;
  string addr=2;
  string topic=3;
  string group=4;
}

message Security{
  message Jwt{
    google.protobuf.Duration expire_in=1;
    string secret=2;
  }
  Jwt jwt=1;
}