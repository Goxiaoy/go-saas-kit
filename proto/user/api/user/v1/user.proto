syntax = "proto3";

package user.api.user.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "google/api/field_behavior.proto";
import "user/api/role/v1/role.proto";
import "blob/blob.proto";

option go_package = "github.com/goxiaoy/go-saas-kit/user/api/user/v1;v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "User Service";
    version: "1.0";
  };
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "bearer"
    }
  }
};
service UserService{
  //ListUsers
  // authz: user.user,*,list
  rpc ListUsers(ListUsersRequest)returns(ListUsersResponse){
    option (google.api.http) = {
      get: "/v1/users"
      additional_bindings:{
        post: "/v1/user/list"
        body: "*"
      }
    };
  }
  //GetUser
  // authz: user.user,id,get
  rpc GetUser (GetUserRequest) returns (User){
    option (google.api.http) = {
      get: "/v1/user/{id}"
    };
  }
  // CreateUser
  // authz: user.user,*,create
  rpc CreateUser(CreateUserRequest) returns(User){
    option (google.api.http) = {
      post: "/v1/user"
      body:"*"
    };
  }

  //UpdateUser
  // authz: user.user,id,update
  rpc UpdateUser(UpdateUserRequest) returns(User){
    option (google.api.http) = {
      put: "/v1/user/{user.id}"
      body: "*"
      additional_bindings: [
        {
          patch: "/v1/user/{user.id}"
          body: "*"
        }
      ]
    };
  }
  //DeleteUser
  // authz: user.user,id,delete
  rpc DeleteUser(DeleteUserRequest) returns(DeleteUserResponse){
    option (google.api.http) = {
      delete: "/v1/user/{id}"
    };
  }
  //GetUserRoles
  // authz: user.user,id,get
  rpc GetUserRoles(GetUserRoleRequest) returns(GetUserRoleReply){
    option (google.api.http) = {
      get: "/v1/user/{id}/roles"
    };
  }

  //InviteUser
  //authz: user.user,*,create
  rpc InviteUser(InviteUserRequest)returns(InviteUserReply){
    option (google.api.http) = {
      post: "/v1/user/invite"
      body:"*"
    };
  }

  //CheckUserTenant internal api for checking whether user is allowed in this tenant
  rpc CheckUserTenant(CheckUserTenantRequest)returns(CheckUserTenantReply){

  }
}

message UserFilter{
  repeated string id_in =1;
  repeated string gender_in=2;

  optional google.protobuf.Timestamp birthday_gte=3;
  optional google.protobuf.Timestamp birthday_lte=4;

  .user.api.role.v1.RoleFilter roles =5;

  repeated UserFilter and =7;
  repeated UserFilter or =8;

}

message ListUsersRequest{
  int32 page_offset =1;
  int32 page_size = 2;
  string search = 3;
  repeated string sort =4;
  google.protobuf.FieldMask fields=5;
  UserFilter filter =6;
}

message GetUserRequest{
  string  id=1 [(validate.rules).string.min_len=1,(google.api.field_behavior) = REQUIRED];
}


message User{
  string  id=1;
  optional google.protobuf.StringValue username =2;
  optional google.protobuf.StringValue name=3;
  optional google.protobuf.StringValue phone =4;
  optional google.protobuf.StringValue email=5;
  optional google.protobuf.Timestamp birthday=6;
  //
  Gender gender=7;
  repeated .user.api.role.v1.Role roles=8;
  blob.BlobFile avatar=10;
}



message ListUsersResponse{
  int32 total_size =1;
  int32 filter_size =2;

  repeated User items = 3;

}

message CreateUserRequest{
    optional google.protobuf.StringValue username =1 [(validate.rules).string.min_len=1,(google.api.field_behavior) = REQUIRED];
    optional google.protobuf.StringValue name=2;
    optional google.protobuf.StringValue phone =3;
    optional google.protobuf.StringValue email=4 [(validate.rules).string.email = true];

    string password=5;
    string confirm_password=6;
    optional google.protobuf.Timestamp birthday=7;
    //
    Gender gender=8;
    string avatar=9;
    repeated string roles_id=10;
}

enum Gender{
  UNKNOWN =0;
  MALE =1;
  FEMALE =2;
  OTHER=3;
}

message UpdateUserRequest{
  UpdateUser user=2 [(validate.rules).message.required=true,(google.api.field_behavior) = REQUIRED];
  google.protobuf.FieldMask update_mask = 3;
}

message UpdateUser{
  string id =1 [(validate.rules).string.min_len=1,(google.api.field_behavior) = REQUIRED];

  optional google.protobuf.StringValue username =2;
  optional google.protobuf.StringValue name=3;
  optional google.protobuf.StringValue phone =4;
  optional google.protobuf.StringValue email=5;
  optional google.protobuf.Timestamp birthday=6;
  //
  Gender gender=7;

  //reset password
  string password=8;
  string confirm_password=9;
  string avatar=10;
  repeated string roles_id=11;
}

message DeleteUserRequest{
  string id =1;
  //default false. Just remove user out of tenant. set to true to remove user from system
  bool force=2;
}
message DeleteUserResponse{

}

message GetUserRoleRequest{
  string id =1;
}
message GetUserRoleReply{
  repeated UserRole roles=1;
}

message UserRole{
  string  id=1;
  string name =2;
}

message InviteUserRequest{
  //username email or phone
  string identify=1[(validate.rules).string.min_len=1,(google.api.field_behavior) = REQUIRED];
}

message InviteUserReply{
  bool required_confirm=1;
}

message CheckUserTenantRequest{
  string user_id=1;
  string tenant_id=2;
}

message CheckUserTenantReply{
  //can user access this tenant
  bool ok=1;
}