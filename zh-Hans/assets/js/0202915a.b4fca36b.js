"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4199],{9434:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=n(1527),a=n(4744);const i={sidebar_label:"Virtual File System",title:"Virtual File System"},r=void 0,o={id:"learn/fundamentals/vfs",title:"Virtual File System",description:"A virtual file system (VFS) is an abstraction layer in an operating system that allows various types of file systems to be accessed and managed through a consistent and unified interface. It enables applications and users to interact with files and directories regardless of their physical storage or file system format.",source:"@site/docs/02-learn/01-fundamentals/05-vfs.mdx",sourceDirName:"02-learn/01-fundamentals",slug:"/learn/fundamentals/vfs",permalink:"/kit/zh-Hans/docs/learn/fundamentals/vfs",draft:!1,unlisted:!1,editUrl:"https://github.com/go-saas/kit/tree/main/docs/docs/02-learn/01-fundamentals/05-vfs.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Virtual File System",title:"Virtual File System"},sidebar:"tutorialSidebar",previous:{title:"Authorization",permalink:"/kit/zh-Hans/docs/learn/fundamentals/authorization"},next:{title:"Configuration",permalink:"/kit/zh-Hans/docs/learn/fundamentals/configuration"}},l={},c=[];function d(e){const t={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"A virtual file system (VFS) is an abstraction layer in an operating system that allows various types of file systems to be accessed and managed through a consistent and unified interface. It enables applications and users to interact with files and directories regardless of their physical storage or file system format."}),"\n",(0,s.jsxs)(t.p,{children:["The virtual file system is based on ",(0,s.jsx)(t.a,{href:"https://github.com/spf13/afero",children:"afero"})]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-go",children:'v := vfs.New() //vfs implements afero.Fs\n\nv.Mount("/", afero.NewMemMapFs()) //second prameter could be any afero.Fs \nv.Mount("/abc", afero.NewMemMapFs())\nv.Mount("/a/b/c/d", afero.NewMemMapFs())\n\nf,err := v.Create("/a/test.txt") // Creat file, for all functions see https://github.com/spf13/afero#list-of-all-available-functions\n'})}),"\n",(0,s.jsx)(t.p,{children:"You can mount different kinds of file systems into different paths."}),"\n",(0,s.jsxs)(t.p,{children:["Github: ",(0,s.jsx)(t.a,{href:"https://github.com/goxiaoy/vfs",children:"https://github.com/goxiaoy/vfs"})]}),"\n",(0,s.jsx)(t.p,{children:"You can change configuration like"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'data:\n  vfs:\n    -\n      public_url: http://localhost/assets\n      mount_path: "/"\n      os:\n        dir: ".assets"\n    -\n      public_url: http://xxx.s3.amazon.xxxxx\n      mount_path: "/s3"\n      s3:\n        region: "xxx"\n        key: "xxx"\n        ...\n'})}),"\n",(0,s.jsx)(t.p,{children:"Kit supports there kinds of file systems currently"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"memory: in memory"}),"\n",(0,s.jsxs)(t.li,{children:["os: use ",(0,s.jsx)(t.code,{children:"os"})," pkg"]}),"\n",(0,s.jsx)(t.li,{children:"s3: amazon s3 compatible file system"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4744:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>r});var s=n(959);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);