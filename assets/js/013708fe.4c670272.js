"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4175],{4482:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=t(1527),i=t(4744);const a={sidebar_label:"Authorization",title:"Authorization"},r=void 0,o={id:"learn/fundamentals/authorization",title:"Authorization",description:"Authorization is the process of determining what actions or operations an authenticated user, system, or entity is allowed to perform within a computer system, application, or network. In other words, after a user's identity is authenticated through the process of authentication, authorization defines what that user is allowed to do and what resources they can access.",source:"@site/docs/02-learn/01-fundamentals/04-authorization.mdx",sourceDirName:"02-learn/01-fundamentals",slug:"/learn/fundamentals/authorization",permalink:"/kit/docs/learn/fundamentals/authorization",draft:!1,unlisted:!1,editUrl:"https://github.com/go-saas/kit/tree/main/docs/docs/02-learn/01-fundamentals/04-authorization.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Authorization",title:"Authorization"},sidebar:"tutorialSidebar",previous:{title:"Authentication",permalink:"/kit/docs/learn/fundamentals/authentication"},next:{title:"Virtual File System",permalink:"/kit/docs/learn/fundamentals/vfs"}},c={},l=[{value:"Access Control List(ACL)",id:"access-control-listacl",level:2},{value:"Subject Resolver",id:"subject-resolver",level:4},{value:"Permission definition",id:"permission-definition",level:4},{value:"Casbin",id:"casbin",level:3},{value:"Authz in Gateway",id:"authz-in-gateway",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Authorization is the process of determining what actions or operations an authenticated user, system, or entity is allowed to perform within a computer system, application, or network. In other words, after a user's identity is authenticated through the process of ",(0,s.jsx)(n.a,{href:"./authentication",children:"authentication"}),", authorization defines what that user is allowed to do and what resources they can access."]}),"\n",(0,s.jsx)(n.h2,{id:"access-control-listacl",children:"Access Control List(ACL)"}),"\n",(0,s.jsx)("img",{src:"/kit/img/acl.drawio.png",alt:"acl"}),"\n",(0,s.jsx)(n.p,{children:"For example, to define a role has the permission of reading users, you can  add an ACL like"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"subject"}),(0,s.jsx)(n.th,{children:"namespace"}),(0,s.jsx)(n.th,{children:"object"}),(0,s.jsx)(n.th,{children:"action"}),(0,s.jsx)(n.th,{children:"tenant"}),(0,s.jsx)(n.th,{children:"effect"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"role/<role_id>"}),(0,s.jsx)(n.td,{children:"user.user"}),(0,s.jsx)(n.td,{children:"*"}),(0,s.jsx)(n.td,{children:"read"}),(0,s.jsx)(n.td,{children:"<tenant_id>"}),(0,s.jsx)(n.td,{children:"grant"})]})})]}),"\n",(0,s.jsx)(n.p,{children:"( * means any)"}),"\n",(0,s.jsxs)(n.p,{children:["See more subjects definition in ",(0,s.jsx)(n.a,{href:"https://github.com/go-saas/kit/blob/main/pkg/authz/authz/subjects.go",children:"https://github.com/go-saas/kit/blob/main/pkg/authz/authz/subjects.go"})]}),"\n",(0,s.jsx)(n.h4,{id:"subject-resolver",children:"Subject Resolver"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["ResolveFromContext: resolve user/client... from ",(0,s.jsx)(n.code,{children:"context.Context"})]}),"\n",(0,s.jsxs)(n.li,{children:["ResolveProcessed: use ",(0,s.jsx)(n.code,{children:"SubjectContrib"})," to resolve subjects from other subject. For example, 'UserRoleContrib' resolve roles of user subject"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"permission-definition",children:"Permission definition"}),"\n",(0,s.jsx)(n.p,{children:"In order to better provide management functionalities similar to the one shown in the figure, permission definition has been extracted."}),"\n",(0,s.jsx)("img",{src:"/kit/img/role-permission.png",alt:"acl"}),"\n",(0,s.jsxs)(n.p,{children:["For example, your can embed an ",(0,s.jsx)(n.code,{children:"permission.yml"})," file into your codebase"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-YAML",children:'groups:\n  - name: "permission.sys.menu.group"\n    side: HOST_ONLY\n    def:\n      - name: "permission.sys.menu.any"\n        namespace: "sys.menu"\n        action: "*"\n        internal: true\n      - name: "permission.sys.menu.read"\n        namespace: "sys.menu"\n        action: "read"\n      - name: "permission.sys.menu.create"\n        namespace: "sys.menu"\n        action: "create"\n      - name: "permission.sys.menu.update"\n        namespace: "sys.menu"\n        action: "update"\n      - name: "permission.sys.menu.delete"\n        namespace: "sys.menu"\n        action: "delete"\n'})}),"\n",(0,s.jsx)(n.p,{children:"And load it by"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"//go:embed permission.yaml\nvar permission []byte\n\nfunc init() {\n\tauthz.LoadFromYaml(permission)\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"casbin",children:(0,s.jsx)(n.a,{href:"https://casbin.org/",children:"Casbin"})}),"\n",(0,s.jsx)(n.p,{children:"Casbin is our authorization provider, and the model is defined as"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Conf",children:"[request_definition]\nr = sub, namespace, obj, act, ten\n\n[policy_definition]\np = sub, namespace, obj, act, ten, eft\n\n[policy_effect]\ne = some(where (p.eft == allow)) && !some(where (p.eft == deny))\n\n[matchers]\nm = keyMatch(r.sub, p.sub) && keyMatch(r.namespace, p.namespace) && keyMatch(r.obj, p.obj) && keyMatch(r.act, p.act) && keyMatch(r.ten, p.ten)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"authz-in-gateway",children:"Authz in Gateway"}),"\n",(0,s.jsxs)(n.p,{children:["You can use ",(0,s.jsx)(n.code,{children:"kit_authz"})," ",(0,s.jsx)(n.a,{href:"https://apisix.apache.org/docs/go-plugin-runner/getting-started/",children:"go-plugin-runner"})," to check authorization"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      jaeger:\n        uri: /jaeger*\n        upstream_id: jaeger\n        plugins:\n          ext-plugin-pre-req:\n            conf:\n              - name: "kit_authz"\n                value: "{\\"requirement\\":[{\\"namespace\\":\\"dev.jaeger\\",\\"resource\\":\\"*\\",\\"action\\":\\"*\\"}]}"\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4744:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var s=t(959);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);