"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3068],{3966:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=t(1527),r=t(4744);const o={sidebar_label:"Events",title:"Events"},a=void 0,i={id:"learn/fundamentals/events",title:"Events",description:"An EventBus is a communication mechanism or pattern used in software development to enable the exchange of messages, events, or notifications between different parts of a software system or between loosely coupled components. It simplifies the decoupling of components and promotes a more scalable and maintainable architecture.",source:"@site/docs/02-learn/01-fundamentals/08-events.mdx",sourceDirName:"02-learn/01-fundamentals",slug:"/learn/fundamentals/events",permalink:"/kit/docs/learn/fundamentals/events",draft:!1,unlisted:!1,editUrl:"https://github.com/go-saas/kit/tree/main/docs/docs/02-learn/01-fundamentals/08-events.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_label:"Events",title:"Events"},sidebar:"tutorialSidebar",previous:{title:"Cache",permalink:"/kit/docs/learn/fundamentals/cache"},next:{title:"Background Job",permalink:"/kit/docs/learn/fundamentals/background-job"}},c={},l=[{value:"Local Eventbus",id:"local-eventbus",level:2},{value:"Distributed Event",id:"distributed-event",level:2},{value:"Producer",id:"producer",level:3},{value:"Consumer",id:"consumer",level:3},{value:"Consistency",id:"consistency",level:2},{value:"Unit of Work Producer",id:"unit-of-work-producer",level:4},{value:"Two-phase message Exposed Endpoint",id:"two-phase-message-exposed-endpoint",level:3},{value:"Provider",id:"provider",level:2},{value:"Kafka",id:"kafka",level:3},{value:"Pulsar",id:"pulsar",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"An EventBus is a communication mechanism or pattern used in software development to enable the exchange of messages, events, or notifications between different parts of a software system or between loosely coupled components. It simplifies the decoupling of components and promotes a more scalable and maintainable architecture."}),"\n",(0,s.jsx)(n.h2,{id:"local-eventbus",children:"Local Eventbus"}),"\n",(0,s.jsxs)(n.p,{children:["github: ",(0,s.jsx)(n.a,{href:"https://github.com/goxiaoy/go-eventbus",children:"https://github.com/goxiaoy/go-eventbus"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"./data-access/repository",children:"Repository"})," uses local eventbus to publish ",(0,s.jsx)(n.a,{href:"./data-access/repository#Entity%20Change%20Events",children:"entities change events"})]}),"\n",(0,s.jsx)(n.h2,{id:"distributed-event",children:"Distributed Event"}),"\n",(0,s.jsx)(n.h3,{id:"producer",children:"Producer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-golang",children:"type Producer interface {\n\tio.Closer\n\tSend(ctx context.Context, msg Event) error\n\tBatchSend(ctx context.Context, msg []Event) error\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Not all the underlying distributed event buses support atomic batch sending."})}),"\n",(0,s.jsx)(n.h3,{id:"consumer",children:"Consumer"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-golang",children:"type HandlerOf[T any] interface {\n\tProcess(context.Context, T) error\n}\ntype ConsumerHandler HandlerOf[Event]\n\ntype Consumer interface {\n\tio.Closer\n\t// Process start process event with handler\n\tProcess(ctx context.Context, handler ConsumerHandler) error\n}\n\n"})}),"\n",(0,s.jsx)(n.h2,{id:"consistency",children:"Consistency"}),"\n",(0,s.jsxs)(n.h4,{id:"unit-of-work-producer",children:[(0,s.jsx)(n.a,{href:"./data-access/local-transaction",children:"Unit of Work"})," Producer"]}),"\n",(0,s.jsxs)(n.p,{children:["Combining with ",(0,s.jsx)(n.a,{href:"./data-access/repository#AggregateRoot",children:"Aggregate Root"})," allows for delayed event sending until the ",(0,s.jsx)(n.a,{href:"./data-access/local-transaction#Unit%20of%20Work",children:"unit of work"})," is committed."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/go-saas/kit/blob/main/event/consumer.go#L102C6-L102C28",children:(0,s.jsx)(n.code,{children:"event.ConsumerFactoryServer"})})," implements kratos ",(0,s.jsx)(n.code,{children:"transport.Server"}),"\nYou can apply middleware pattern to ",(0,s.jsx)(n.code,{children:"ConsumerFactoryServer"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-golang",children:"\tsrv := event.NewConsumerFactoryServer(e, container)\n    // panic recovery,tracing,logging,unit of work\n\tsrv.Use(event.ConsumerRecover(event.WithLogger(logger)), trace.Receive(), event.Logging(logger), event.ConsumerUow(uowMgr))\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"two-phase-message-exposed-endpoint",children:[(0,s.jsx)(n.a,{href:"./distributed-transaction#Two-phase%20message",children:"Two-phase message"})," Exposed Endpoint"]}),"\n",(0,s.jsxs)(n.p,{children:["You can embed ",(0,s.jsx)(n.code,{children:"eventserver.EventProviderSet"})," to your di container to expose grpc endpoints for cases like ",(0,s.jsx)(n.a,{href:"./cache#Cache%29Consistency",children:"Cache Consistency"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'eventserver "github.com/go-saas/kit/event/server"\n\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"service EventService{\n  rpc HandleEvent(HandleEventRequest)returns(google.protobuf.Empty){\n  }\n  rpc PublishEvent(PublishEventRequest)returns(google.protobuf.Empty){\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"provider",children:"Provider"}),"\n",(0,s.jsx)(n.h3,{id:"kafka",children:"Kafka"}),"\n",(0,s.jsx)(n.h3,{id:"pulsar",children:"Pulsar"})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4744:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var s=t(959);const r={},o=s.createContext(r);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);